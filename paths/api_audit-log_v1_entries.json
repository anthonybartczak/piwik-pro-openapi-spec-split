{
  "openapi": "3.1.0",
  "info": {
    "title": "Web API",
    "version": "master"
  },
  "servers": [
    {
      "url": "https://{account}.piwik.pro",
      "variables": {
        "account": {
          "default": "example"
        }
      }
    }
  ],
  "security": [
    {
      "OAuth2ClientCredentials": []
    }
  ],
  "paths": {
    "/api/audit-log/v1/entries": {
      "get": {
        "summary": "Entry list",
        "description": "List of Audit Log entries<br><br> To specify filters use `?filter[name]=value` syntax (e.g. `?filter[type]=app.added,app.edited`)<br><br> To return csv instead of json, use `Accept: text/csv` header\n",
        "operationId": "audit_log_entries_v1",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 0,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter items by provided criteria",
            "style": "deepObject",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "description": "Comma separated list of event types",
                  "example": "app.added,app.edited",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Name of the event",
                    "example": "app.added"
                  }
                },
                "date_from": {
                  "description": "Date from (ISO-8601 format)",
                  "example": "2020-01-01T00:00:00Z",
                  "type": "string",
                  "format": "date-time"
                },
                "date_to": {
                  "description": "Date to (ISO-8601 format)",
                  "example": "2020-01-03T00:00:00Z",
                  "type": "string",
                  "format": "date-time"
                },
                "author_id": {
                  "description": "Comma separated list of UUIDs of event authors",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid",
                    "description": "UUIDv4 identifier of an object",
                    "example": "6edb1e3c-4c43-4760-ab76-682ad83146be"
                  }
                },
                "subject_id": {
                  "description": "Comma separated list of UUIDs of event subjects (i.e. for `Meta site edited` it's the id of a meta site)",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid",
                    "description": "UUIDv4 identifier of an object",
                    "example": "6edb1e3c-4c43-4760-ab76-682ad83146be"
                  }
                },
                "ip": {
                  "description": "Comma serparated list of IPs",
                  "type": "array",
                  "items": {
                    "description": "Event author ip address (IPv4 or IPv6)",
                    "example": "193.17.41.169",
                    "type": "string",
                    "oneOf": [
                      {
                        "format": "IPv4"
                      },
                      {
                        "format": "IPv6"
                      }
                    ]
                  }
                }
              }
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort by field",
            "schema": {
              "type": "string",
              "default": "-created_at",
              "enum": [
                "type",
                "email",
                "created_at",
                "ip",
                "subject_id",
                "-type",
                "-email",
                "-created_at",
                "-ip",
                "-subject_id"
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUIDv4 identifier of an object",
                            "example": "6edb1e3c-4c43-4760-ab76-682ad83146be"
                          },
                          "type": {
                            "type": "string",
                            "description": "Resource type",
                            "enum": [
                              "ppms/audit-log-entry"
                            ]
                          },
                          "attributes": {
                            "type": "object",
                            "required": [
                              "created_at",
                              "type",
                              "payload",
                              "author_id",
                              "author_email",
                              "subject_id",
                              "ip",
                              "version"
                            ],
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Timestamp of event occurrence (ISO-8601 format)",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "description": "Name of the event",
                                "example": "app.added"
                              },
                              "payload": {
                                "type": "object",
                                "example": {
                                  "id": "4faa8732-8877-40aa-b772-7b243bf60423",
                                  "name": "Important name"
                                }
                              },
                              "author_id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "UUIDv4 identifier of an object",
                                "example": "6edb1e3c-4c43-4760-ab76-682ad83146be"
                              },
                              "author_email": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "format": "email",
                                    "example": "john@doe.com"
                                  },
                                  {
                                    "nullable": true
                                  }
                                ]
                              },
                              "subject_id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "UUIDv4 identifier of an object",
                                "example": "6edb1e3c-4c43-4760-ab76-682ad83146be"
                              },
                              "ip": {
                                "allOf": [
                                  {
                                    "description": "Event author ip address (IPv4 or IPv6)",
                                    "example": "193.17.41.169",
                                    "type": "string",
                                    "oneOf": [
                                      {
                                        "format": "IPv4"
                                      },
                                      {
                                        "format": "IPv6"
                                      }
                                    ]
                                  },
                                  {
                                    "nullable": true
                                  }
                                ]
                              },
                              "version": {
                                "description": "Version of an event (e.g. version `1` of `app.added` could be not compatible with version `2`)",
                                "type": "integer",
                                "minimum": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Response meta",
                      "required": [
                        "total"
                      ],
                      "properties": {
                        "total": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              "text/csv": {
                "example": "author_email,author_id,created_at,id,ip,payload,subject_id,type,version\njohn@company.com,378871f1-ec3e-11ea-b4d9-0242ac150002,2020-03-19T21:49:36Z,06768bbe-ec3f-11ea-9ba2-0242ac150002,68.242.57.125,\"{\"\"id\"\": \"\"06768bbe-ec3f-11ea-9ba2-0242ac150002\"\", \"\"urls\"\": [\"\"http://piwik.pro\"\"]}\",06768b77-ec3f-11ea-9ba2-0242ac150002,app.changed.urls,1\njane@company.com,06164bd6-ec3f-11ea-9ba2-0242ac150002,2019-10-28T13:15:26Z,067589fd-ec3f-11ea-9ba2-0242ac150002,65.60.114.193,\"{\"\"id\"\": \"\"06768bbe-ec3f-11ea-9ba2-0242ac150002\"\"}\",067589b0-ec3f-11ea-9ba2-0242ac150002,app.changed.exclude_unknown_urls,1\njohn@company.com,378871f1-ec3e-11ea-b4d9-0242ac150002,2020-01-18T10:04:48Z,39018459-ec3e-11ea-b4d9-0242ac150002,92.128.231.122,\"{\"\"id\"\": \"\"06768bbe-ec3f-11ea-9ba2-0242ac150002\"\"}\",3901832e-ec3e-11ea-b4d9-0242ac150002,app.deleted,1\njohn@company.com,378871f1-ec3e-11ea-b4d9-0242ac150002,2019-12-15T04:31:24Z,3900b710-ec3e-11ea-b4d9-0242ac150002,15.23.2.241,\"{\"\"id\"\": \"\"0fa3fd75-b1b2-4897-8853-708211cebf0a\"\"}\",3900b5d3-ec3e-11ea-b4d9-0242ac150002,permission.user_group.changed.meta_site,1\n",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "created_at",
                      "type",
                      "payload",
                      "author_id",
                      "author_email",
                      "subject_id",
                      "ip",
                      "version"
                    ],
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of event occurrence (ISO-8601 format)",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Name of the event",
                        "example": "app.added"
                      },
                      "payload": {
                        "type": "object",
                        "example": {
                          "id": "4faa8732-8877-40aa-b772-7b243bf60423",
                          "name": "Important name"
                        }
                      },
                      "author_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUIDv4 identifier of an object",
                        "example": "6edb1e3c-4c43-4760-ab76-682ad83146be"
                      },
                      "author_email": {
                        "allOf": [
                          {
                            "type": "string",
                            "format": "email",
                            "example": "john@doe.com"
                          },
                          {
                            "nullable": true
                          }
                        ]
                      },
                      "subject_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUIDv4 identifier of an object",
                        "example": "6edb1e3c-4c43-4760-ab76-682ad83146be"
                      },
                      "ip": {
                        "allOf": [
                          {
                            "description": "Event author ip address (IPv4 or IPv6)",
                            "example": "193.17.41.169",
                            "type": "string",
                            "oneOf": [
                              {
                                "format": "IPv4"
                              },
                              {
                                "format": "IPv6"
                              }
                            ]
                          },
                          {
                            "nullable": true
                          }
                        ]
                      },
                      "version": {
                        "description": "Version of an event (e.g. version `1` of `app.added` could be not compatible with version `2`)",
                        "type": "integer",
                        "minimum": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "status",
                              "code",
                              "title"
                            ],
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "the HTTP status code applicable to this problem, expressed as a string value",
                                "example": "400"
                              },
                              "code": {
                                "type": "string",
                                "description": "an application-specific error code, expressed as a string value",
                                "example": "invalid"
                              },
                              "detail": {
                                "type": "string",
                                "description": "a human-readable explanation specific to this occurrence of the problem. This field\u2019s value can be localized",
                                "example": "'512.xxx.123' does not appear to be an IPv4 or IPv6 address"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "status",
                              "code",
                              "title"
                            ],
                            "properties": {
                              "source": {
                                "type": "object",
                                "properties": {
                                  "parameter": {
                                    "type": "string",
                                    "description": "string indicating which URI query parameter caused the error.",
                                    "example": "filter[ip]"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "authorization field missing"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "status",
                              "code",
                              "title"
                            ],
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "the HTTP status code applicable to this problem, expressed as a string value",
                                "example": "400"
                              },
                              "code": {
                                "type": "string",
                                "description": "an application-specific error code, expressed as a string value",
                                "example": "invalid"
                              },
                              "detail": {
                                "type": "string",
                                "description": "a human-readable explanation specific to this occurrence of the problem. This field\u2019s value can be localized",
                                "example": "'512.xxx.123' does not appear to be an IPv4 or IPv6 address"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "example": {
                        "errors": [
                          {
                            "detail": "Authentication credentials were not provided.",
                            "status": "403",
                            "code": "not_authenticated"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Audit Log"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2ClientCredentials": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/auth/token",
            "scopes": {}
          }
        }
      },
      "JWTAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "OrganizationHeaderAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Organization",
        "description": "Organization name as the header value"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "x-api-checksum": "3c5ea1220b71cba477af28107966d0e7a7bdf735d5b8006a7c729dc6c346f66d",
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}