{
  "openapi": "3.1.0",
  "info": {
    "title": "Web API",
    "version": "master"
  },
  "servers": [
    {
      "url": "https://{account}.piwik.pro",
      "variables": {
        "account": {
          "default": "example"
        }
      }
    }
  ],
  "security": [
    {
      "OAuth2ClientCredentials": []
    }
  ],
  "paths": {
    "/api/users/v2": {
      "post": {
        "deprecated": true,
        "description": "Please use <a href=\"#operation/api_users_invited_v2\">Invite user</a> instead.<br><br>\nIt adds user.\n",
        "summary": "Create user",
        "operationId": "api_users_add_v2",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ppms/user"
                        ],
                        "description": "Resource type, unique across whole PPAS"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "password": {
                            "type": "string",
                            "description": "Valid password (length between 12 and 128 chars, it must contain at least one digit, one uppercase and one lowercase letter)",
                            "example": "Secret1337"
                          },
                          "email": {
                            "type": "string",
                            "description": "Valid user email",
                            "format": "email",
                            "example": "john@doe.com"
                          },
                          "role": {
                            "allOf": [
                              {
                                "type": "string",
                                "description": "User role",
                                "example": "USER",
                                "enum": [
                                  "OWNER",
                                  "USER"
                                ]
                              }
                            ],
                            "default": "USER"
                          },
                          "language": {
                            "type": "string",
                            "format": "IETF-language-tag",
                            "description": "User Interface language with IETF language tag format",
                            "example": "en-US",
                            "default": "en-US"
                          }
                        },
                        "required": [
                          "email",
                          "password"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "description": "Resource ID",
                              "example": "985ed9d7-b652-47b8-b9cf-c17d62735261"
                            },
                            "type": {
                              "type": "string",
                              "description": "Resource type, unique across whole PPAS",
                              "example": "ppms/user"
                            },
                            "attributes": {
                              "type": "object"
                            }
                          }
                        },
                        {
                          "properties": {
                            "type": {
                              "allOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "ppms/user"
                                  ],
                                  "description": "PPAS user resource type"
                                }
                              ]
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "email": {
                                  "type": "string",
                                  "description": "Valid user email",
                                  "format": "email",
                                  "example": "john@doe.com"
                                },
                                "role": {
                                  "type": "string",
                                  "description": "User role",
                                  "example": "USER",
                                  "enum": [
                                    "OWNER",
                                    "USER"
                                  ]
                                },
                                "organization": {
                                  "type": "string",
                                  "example": "organization_name"
                                },
                                "addedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Datetime with time zone in ISO-8601 format",
                                  "example": "2018-06-25T07:28:52+01:00"
                                },
                                "language": {
                                  "type": "string",
                                  "format": "IETF-language-tag",
                                  "description": "User Interface language with IETF language tag format",
                                  "example": "en-US",
                                  "default": "en-US"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "status",
                              "title"
                            ],
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "the HTTP status code applicable to this problem, expressed as a string value",
                                "example": "400"
                              },
                              "code": {
                                "type": "string",
                                "description": "an application-specific error code, expressed as a string value",
                                "example": "error.default"
                              },
                              "title": {
                                "type": "string",
                                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization\n",
                                "example": "Invalid form"
                              },
                              "detail": {
                                "type": "string",
                                "description": "a human-readable explanation specific to this occurrence of the problem. Like `title`, this field\u2019s value can be localized\n",
                                "example": "This field is invalid"
                              },
                              "source": {
                                "type": "object",
                                "description": "an object containing references to the source of the error, optionally including any of the following members: [pointer, parameter]\n",
                                "properties": {
                                  "pointer": {
                                    "type": "string",
                                    "example": "/data/attributes/name",
                                    "description": "a JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/name\" for a specific attribute]\n"
                                  },
                                  "parameter": {
                                    "type": "string",
                                    "example": "offset",
                                    "description": "a string indicating which URI query parameter caused the error"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "User already exists": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid form",
                          "detail": "User with email: 'example@piwik.pro' already exists.",
                          "code": "users.error.user-already-exists",
                          "source": {
                            "pointer": "/email"
                          }
                        }
                      ]
                    }
                  },
                  "Unsupported language": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid form",
                          "code": "users.error.unsupported-language",
                          "detail": "Language \"pl\" is not supported (supported are ca, de, en, es, fi, fr, nl, sv)",
                          "source": {
                            "pointer": "/language"
                          }
                        }
                      ]
                    }
                  },
                  "Unsupported language tag": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid form",
                          "code": "users.error.unsupported-language-tag",
                          "detail": "Invalid language - use IETF language tag format - for example: 'en-US'",
                          "source": {
                            "pointer": "/language"
                          }
                        }
                      ]
                    }
                  },
                  "Unsupported language region": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid form",
                          "code": "users.error.unsupported-language",
                          "detail": "Region code 'EN' is not supported - use valid ISO 3166-1 alpha-2 code",
                          "source": {
                            "pointer": "/language"
                          }
                        }
                      ]
                    }
                  },
                  "Email should not be blank": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid form",
                          "code": "error.not-blank",
                          "detail": "This value should not be blank.",
                          "source": {
                            "pointer": "/email"
                          }
                        }
                      ]
                    }
                  },
                  "Email invalid value": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid form",
                          "code": "users.error.invalid-email",
                          "detail": "\"example.com\" is not a valid email address.",
                          "source": {
                            "pointer": "/email"
                          }
                        }
                      ]
                    }
                  },
                  "Email invalid type": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid form",
                          "code": "error.default",
                          "detail": "This value is not valid.",
                          "source": {
                            "pointer": "/email"
                          }
                        }
                      ]
                    }
                  },
                  "Invalid password policy": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid form",
                          "code": "users.error.invalid-new-password",
                          "detail": "Password is invalid. It must contain at least one numeric digit, one uppercase, and one lowercase letter",
                          "source": {
                            "pointer": "/password"
                          }
                        }
                      ]
                    }
                  },
                  "Invalid role": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid form",
                          "code": "users.error.invalid-role",
                          "detail": "Role \"invalid_role\" is not supported (supported are OWNER, USER)",
                          "source": {
                            "pointer": "/role"
                          }
                        }
                      ]
                    }
                  },
                  "Invalid JSON API resource type": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "\"invalid/type\" is not a valid resource type, use \"ppms/user\" instead",
                          "code": "error.json-api-resource-type"
                        }
                      ]
                    }
                  },
                  "Invalid content type": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "\"application/json\" is not a valid JsonApi Content-Type header, use \"application/vnd.api+json\" instead",
                          "code": "error.json-api-content-type"
                        }
                      ]
                    }
                  },
                  "Invalid JSON API content": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid jsonapi message received",
                          "code": "error.default"
                        }
                      ]
                    }
                  },
                  "Invalid attributes": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid field 'attributes' - value should be an object - got 'int'",
                          "code": "error.default"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "status",
                              "title"
                            ],
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "the HTTP status code applicable to this problem, expressed as a string value",
                                "example": "400"
                              },
                              "code": {
                                "type": "string",
                                "description": "an application-specific error code, expressed as a string value",
                                "example": "error.default"
                              },
                              "title": {
                                "type": "string",
                                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization\n",
                                "example": "Invalid form"
                              },
                              "detail": {
                                "type": "string",
                                "description": "a human-readable explanation specific to this occurrence of the problem. Like `title`, this field\u2019s value can be localized\n",
                                "example": "This field is invalid"
                              },
                              "source": {
                                "type": "object",
                                "description": "an object containing references to the source of the error, optionally including any of the following members: [pointer, parameter]\n",
                                "properties": {
                                  "pointer": {
                                    "type": "string",
                                    "example": "/data/attributes/name",
                                    "description": "a JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/name\" for a specific attribute]\n"
                                  },
                                  "parameter": {
                                    "type": "string",
                                    "example": "offset",
                                    "description": "a string indicating which URI query parameter caused the error"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Forbidden": {
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "title": "Forbidden",
                          "code": "error.default"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "get": {
        "summary": "Get users list",
        "operationId": "api_users_list_v2",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Sets offset for list of items",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limits the number of returned items",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 0,
              "maximum": 1000
            },
            "required": false
          },
          {
            "name": "search_query",
            "in": "query",
            "description": "(deprecated) Use `search` param instead",
            "schema": {
              "type": "string",
              "default": ""
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort field - can be reversed by adding dash before field name e.g (-email)",
            "schema": {
              "type": "string",
              "default": "-addedAt",
              "enum": [
                "email",
                "addedAt",
                "role",
                "-email",
                "-addedAt",
                "-role"
              ]
            },
            "required": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "User search query. You can search by email or id.",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "description": "Metadata of a listing",
                      "required": [
                        "total"
                      ],
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items",
                          "example": 1
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Resource ID",
                                "example": "985ed9d7-b652-47b8-b9cf-c17d62735261"
                              },
                              "type": {
                                "type": "string",
                                "description": "Resource type, unique across whole PPAS",
                                "example": "ppms/user"
                              },
                              "attributes": {
                                "type": "object"
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "allOf": [
                                  {
                                    "type": "string",
                                    "enum": [
                                      "ppms/user"
                                    ],
                                    "description": "PPAS user resource type"
                                  }
                                ]
                              },
                              "attributes": {
                                "type": "object",
                                "properties": {
                                  "email": {
                                    "type": "string",
                                    "description": "Valid user email",
                                    "format": "email",
                                    "example": "john@doe.com"
                                  },
                                  "role": {
                                    "type": "string",
                                    "description": "User role",
                                    "example": "USER",
                                    "enum": [
                                      "OWNER",
                                      "USER"
                                    ]
                                  },
                                  "organization": {
                                    "type": "string",
                                    "example": "organization_name"
                                  },
                                  "addedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Datetime with time zone in ISO-8601 format",
                                    "example": "2018-06-25T07:28:52+01:00"
                                  },
                                  "language": {
                                    "type": "string",
                                    "format": "IETF-language-tag",
                                    "description": "User Interface language with IETF language tag format",
                                    "example": "en-US",
                                    "default": "en-US"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "status",
                              "title"
                            ],
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "the HTTP status code applicable to this problem, expressed as a string value",
                                "example": "400"
                              },
                              "code": {
                                "type": "string",
                                "description": "an application-specific error code, expressed as a string value",
                                "example": "error.default"
                              },
                              "title": {
                                "type": "string",
                                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization\n",
                                "example": "Invalid form"
                              },
                              "detail": {
                                "type": "string",
                                "description": "a human-readable explanation specific to this occurrence of the problem. Like `title`, this field\u2019s value can be localized\n",
                                "example": "This field is invalid"
                              },
                              "source": {
                                "type": "object",
                                "description": "an object containing references to the source of the error, optionally including any of the following members: [pointer, parameter]\n",
                                "properties": {
                                  "pointer": {
                                    "type": "string",
                                    "example": "/data/attributes/name",
                                    "description": "a JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/name\" for a specific attribute]\n"
                                  },
                                  "parameter": {
                                    "type": "string",
                                    "example": "offset",
                                    "description": "a string indicating which URI query parameter caused the error"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Invalid offset": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid query parameter 'offset' - value should be a positive integer - got '-1'",
                          "code": "error.default"
                        }
                      ]
                    }
                  },
                  "Invalid limit": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid query parameter 'limit' - value should be a positive integer - got '-1'",
                          "code": "error.default"
                        }
                      ]
                    }
                  },
                  "Invalid limit over": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Limit parameter exceeded maximum \"1000\" value, \"1001\" given",
                          "code": "error.default"
                        }
                      ]
                    }
                  },
                  "Invalid sort": {
                    "value": {
                      "errors": [
                        {
                          "status": "400",
                          "title": "Invalid query parameter 'sort' - available options are [email,addedAt,role] - got 'example'",
                          "code": "error.default"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "status",
                              "title"
                            ],
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "the HTTP status code applicable to this problem, expressed as a string value",
                                "example": "400"
                              },
                              "code": {
                                "type": "string",
                                "description": "an application-specific error code, expressed as a string value",
                                "example": "error.default"
                              },
                              "title": {
                                "type": "string",
                                "description": "a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization\n",
                                "example": "Invalid form"
                              },
                              "detail": {
                                "type": "string",
                                "description": "a human-readable explanation specific to this occurrence of the problem. Like `title`, this field\u2019s value can be localized\n",
                                "example": "This field is invalid"
                              },
                              "source": {
                                "type": "object",
                                "description": "an object containing references to the source of the error, optionally including any of the following members: [pointer, parameter]\n",
                                "properties": {
                                  "pointer": {
                                    "type": "string",
                                    "example": "/data/attributes/name",
                                    "description": "a JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/name\" for a specific attribute]\n"
                                  },
                                  "parameter": {
                                    "type": "string",
                                    "example": "offset",
                                    "description": "a string indicating which URI query parameter caused the error"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "Forbidden": {
                    "value": {
                      "errors": [
                        {
                          "status": "403",
                          "title": "Forbidden",
                          "code": "error.default"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2ClientCredentials": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/auth/token",
            "scopes": {}
          }
        }
      },
      "JWTAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "OrganizationHeaderAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Organization",
        "description": "Organization name as the header value"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "x-api-checksum": "3c5ea1220b71cba477af28107966d0e7a7bdf735d5b8006a7c729dc6c346f66d",
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}