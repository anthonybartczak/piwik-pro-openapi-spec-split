{
  "openapi": "3.1.0",
  "info": {
    "title": "Web API",
    "version": "master"
  },
  "servers": [
    {
      "url": "https://{account}.piwik.pro",
      "variables": {
        "account": {
          "default": "example"
        }
      }
    }
  ],
  "security": [
    {
      "OAuth2ClientCredentials": []
    }
  ],
  "paths": {
    "/api/cdp/log/v1/app/{app_id}/webhook-import/{webhook_import_id}/last": {
      "get": {
        "deprecated": true,
        "summary": "Fetch last webhook import requests",
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "operationId": "get-log-import-webhook-requests-last",
        "description": "Returns last 100 webhook import requests. This API is deprecated, use [API v3](#operation/get-log-import-webhook-requests-last-v3).",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the app.",
              "example": "3929d56c-cd62-4001-a4fc-013f5f954691"
            }
          },
          {
            "in": "path",
            "name": "webhook_import_id",
            "description": "An webhook import UUID for which last log entries are requested",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "e898ae47-61cd-4c9d-9d67-e5a930eb9f39"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "outcome",
            "description": "Return only webhook import requests that ended with success/error",
            "schema": {
              "type": "string",
              "enum": [
                "success",
                "error"
              ],
              "example": "success"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "How many recent logs should be returned",
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "example": 10
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Single entry in webhook import Requests Log",
                    "required": [
                      "time",
                      "profile_identifier_type",
                      "profile_identifier_value",
                      "success",
                      "request",
                      "response"
                    ],
                    "properties": {
                      "time": {
                        "type": "string",
                        "format": "datetime",
                        "description": "Time when webhook import request was received",
                        "example": "2023-05-26T16:58:12.195361Z"
                      },
                      "profile_identifier_type": {
                        "type": "string",
                        "description": "Type of dominant identifier",
                        "enum": [
                          "cookie_id",
                          "user_id"
                        ],
                        "example": "cookie_id"
                      },
                      "profile_identifier_value": {
                        "type": "string",
                        "description": "Dominant identifier value",
                        "example": "aa2720bcb1ddce1b"
                      },
                      "success": {
                        "type": "boolean",
                        "description": "Whether webhook import request succeeded",
                        "example": true
                      },
                      "error": {
                        "type": "object",
                        "description": "webhook import request error, present if the request failed",
                        "required": [
                          "code",
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "enum": [
                              "payload-too-large",
                              "validation-error",
                              "module-disabled",
                              "client-error",
                              "server-error",
                              "other"
                            ],
                            "description": "Error type"
                          },
                          "message": {
                            "type": "string",
                            "description": "Human-readable error message",
                            "example": "Webhook not yet defined"
                          }
                        }
                      },
                      "request": {
                        "type": "object",
                        "description": "webhook import request",
                        "required": [
                          "method",
                          "url",
                          "headers",
                          "body"
                        ],
                        "properties": {
                          "method": {
                            "type": "string",
                            "enum": [
                              "POST",
                              "GET"
                            ],
                            "description": "HTTP method of the request",
                            "example": "POST"
                          },
                          "url": {
                            "type": "string",
                            "description": "URL of the webhook",
                            "example": "https://organization.piwik.pro/api/cdp/profiles/v1/public/app/3929d56c-cd62-4001-a4fc-013f5f954691/webhook/09e107ec60874f0b"
                          },
                          "headers": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "minItems": 2,
                              "maxItems": 2,
                              "description": "Two-element array with header name and value"
                            },
                            "description": "Headers sent with the request",
                            "example": [
                              [
                                "Content-Type",
                                "application/json"
                              ],
                              [
                                "Content-Length",
                                "472"
                              ]
                            ]
                          },
                          "body": {
                            "type": "string",
                            "description": "Body of the request",
                            "example": "{\"user\":\"tom@example.com\",\"user_score\":102.55}"
                          }
                        }
                      },
                      "response": {
                        "type": "object",
                        "description": "Response to webhook import request, present if the request has not timed out",
                        "required": [
                          "time_ms",
                          "status",
                          "headers",
                          "body"
                        ],
                        "properties": {
                          "time_ms": {
                            "type": "integer",
                            "description": "Time between receiving the request and sending a response back in milliseconds",
                            "example": 146
                          },
                          "status": {
                            "type": "integer",
                            "description": "Response status code",
                            "example": 200
                          },
                          "headers": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "minItems": 2,
                              "maxItems": 2,
                              "description": "Two-element array with header name and value"
                            },
                            "description": "Headers of the response",
                            "example": [
                              [
                                "Content-Type",
                                "application/json"
                              ],
                              [
                                "Content-Length",
                                "472"
                              ]
                            ]
                          },
                          "body": {
                            "type": "string",
                            "description": "Body of the response",
                            "example": "{\"user\":\"tom@example.com\",\"user_score\":102.55}"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "An array of last webhook import requests log entries"
          },
          "400": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Request parameters deserialization error."
                }
              }
            },
            "description": "Bad request response (e.g. missing GET parameter, parameter value out of bounds)"
          },
          "401": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "description": "Access token is missing or invalid"
          },
          "402": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Module disabled."
                }
              }
            },
            "description": "CDP module is disabled"
          },
          "404": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "404 page not found"
                }
              }
            },
            "description": "Resource not found (bad ID or resource deleted)"
          },
          "422": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Unprocessable Entity"
                }
              }
            },
            "description": "Data in body does not meet requirements (e.g. missing field)"
          },
          "500": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Internal error occurred. Check logs"
                }
              }
            },
            "description": "Internal application error response (some service encountered unexpected error)"
          }
        },
        "tags": [
          "Customer Data Platform"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2ClientCredentials": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/auth/token",
            "scopes": {}
          }
        }
      },
      "JWTAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "OrganizationHeaderAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Organization",
        "description": "Organization name as the header value"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "x-api-checksum": "3c5ea1220b71cba477af28107966d0e7a7bdf735d5b8006a7c729dc6c346f66d",
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}